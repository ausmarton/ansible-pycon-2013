---
- hosts: web 
  user: root
  vars:
    uwsgi_sock_file: /tmp/uwsgi.sock
    home_dir: /home/ausmarton
    app_name: tumblelog
    app_dir: /home/ausmarton/flask-tumblelog
    wsgi_callable: app
    db_name: my_tumble_log
    db_host: db.ausmarton.com
    db_port: 27017
  
  tasks:
 
  - name: Install PIP, Nginx, python-devel and git
    yum: name={{ item }} state=installed
    with_items:
    - python-pip
    - nginx
    - python-devel
    - git
    tags:
    - packages
    - internet
 
  - name: Start Nginx
    service: name=nginx state=started
    tags:
    - offline

  #- name: Install uWSGI, Flask, WTForms, mongoengine and flask_mongoengine
   # pip: name={{ item }}
   # with_items:
   # - uWSGI
   # - Flask
    #- WTForms
    #- mongoengine
    #- flask-mongoengine
    #tags:
    #- packages
    #- internet

  - name: Clone git repo
    git: repo=https://github.com/rozza/flask-tumblelog.git dest={{ app_dir }}
    tags:
    - internet

  - name: Configure Tumblelog to use correct db
    template: src=templates/__init__.py.j2 dest={{ app_dir }}/{{ app_name }}/__init__.py
    tags:
    - offline

  #  On a production system, we wouldn't want devel packages lying around
  - name: Remove python-devel when done
    yum: name=python-devel state=removed
    tags:
    - offline
    - packages
    when: production is defined

  # Need to kill a previously running uwsgi process if found,
  # externalize user and app location
  - name: Start uWSGI
    uwsgi: sock_file={{ uwsgi_sock_file }} app={{ app_name }}:{{ wsgi_callable }} app_dir={{ app_dir }} uid=500
    tags:
    - offline
    notify:
    - restart nginx

  - name: Configure Nginx to connect to uWSGI
    template: src=templates/nginx.default.conf.j2 dest=/etc/nginx/conf.d/default.conf
    tags:
    - offline
    notify:
    - restart nginx

  handlers:
    - name: restart nginx
      service: name=nginx state=restarted
      tags:
      - offline
